getwd()
x <- 4
class(x)
x <- c(4, TRUE)
class(x)
x[0]
x[1]
x[2]
x <- c(1,3,5)
y <- c(3,2,10)
cbind(x,y)
x <- list(2,"a","b",TRUE)
x[[2]]
class(x[[2]])
x <- 1:4
y <- 2:3
x + y
x <- c(17, 14, 4, 5, 13, 12, 10)
x[x > 4] <- 10
x
ls
x <- 1
print(x)
x
msg <- "hello"
x <- 1:20
x
data <- read.table("hw1_data.csv")
data <- read.csv("hw1_data.csv")
data[1]
data[headers]
data[,2]
names(dataset)
names(data)
data[c(1:2),]
nrow(data)
data[c(nrow(data)-1,nrow(data)),]
data[47,"Ozone"]
data[1:2,"Ozone"]
data[1:2,]
table(is.na(data$OZone))
table(factor(is.na(c(data$Ozone))))[2]
table(factor(is.na(data$Ozone)))[2]
table(is.na(data$Ozone))[2]
table(is.na(data$Ozone))
is.na(data$Ozone)
table(is.na(data$Ozone))
mean(data$Ozone[!is.na(data$Ozone)])
data[data$Ozone > 31, data$Temp > 90]
data[data$Ozone > 31 & data$Temp > 90]
good <- complete.cases(data$Ozone, data$Solar.R, data$Temp)
data$Solar.R[data$Ozone > 31 & data$Temp > 90]
mean(data$Solar.R[data$Ozone > 31 & data$Temp > 90])
mean(data$Solar.R[good & data$Ozone > 31 & data$Temp > 90])
mean(data$Temp[Month = 6])
mean(data$Temp[good & Month = 6])
mean(data$Temp[good & data$Month = 6])
mean(data$Temp[good & Month == 6])
mean(data$Temp[data$Month = 6])
mean(data$Temp[Month == 6])
mean(data$Temp[data$Month == 6])
max(data$Ozone[data$Month == 5])
good <- complete.cases(data$Ozone, data$Month)
max(data$Ozone[good & data$Month == 5])
x <4L
x <- 4L
class(x)
x <- c(4,TRUE)
class(x)
x <- c(1,3,5)
y <- c(3,2,10)
cbind(x,y)
class(cbind(x,y))
x <- list(2, "a", "b", TRUE)
x[[1]]
class(x[[1]])
x <- 1:4
y <- 2
x+7
x+y
x <- 4L
class(x)
x
install.packages("swirl")
str(file)
library(swirl)
swirl()
5 + 7
x <- 5 + 7
x
y <- x - 3
y
z <- c(1.1, 9, 3.14)
?c
z
c(z, 555, z)
z * 2 + 100
my_sqrt <- sqrt(z-1)
my_sqrt
mydiv <- z / my_sqrt
my_div <- z / my_sqrt
my_div
c(1,2,3,4) + c(0,10)
c(1,2,3,4) + c(0,10,100)
c(1,2,3,4) + c(0,10,100)
z * 2 + 1000
my_div
x <- c("a","b","c","d")
z <- 5
add2 <- function(x, y) {
x + y
}
add2(4,8)
above <- function(x, n) {
use <- x > n
x[use]
}
x <- 1:20
above(x, 12)
above <- function(x, n = 10) {
use <- x > n
x[use]
}
above(x)
columnmean <- function(y) {
nc <- ncol(y)
means <- numeric(nc)
for( i in 1:nc) {
mean[i] <- mean(y[, i])
}
means
}
columnmean(airquality)
source('~/.active-rstudio-document')
?ncol
read.csv(airquality.csv)
source('C:/Users/Daniel/datascience/rprogramming/firstfunctions.R')
read.csv("hw1_data.csv")
airquality <- read.csv("hw1_data.csv")
columnmean(airquality)
ncol(airquality)
nc <- ncol(airquality)
means <- numeric(nc)
nc
means
mean[1] <- mean(airqualty[, 1], na.rm = TRUE)
mean[1] <- mean(airquality[, 1], na.rm = TRUE)
means[1] <- mean(airquality[, 1], na.rm = TRUE)
columnmean <- function(y, removeNA = TRUE) {
nc <- ncol(y)
means <- numeric(nc)
for( i in 1:nc) {
means[i] <- mean(y[, i], na.rm = removeNA)
}
means
}
columnmean(airquality)
formals(columnmean)
search()
x <- as.Date("1970-01-01")
x
x + 5
quarters(x)
months(x)
weekdays(x)
sys.time()
Sys.time()
p <- as.POSIXlt(x)
p
names(p)
x
x(day)
x.day()
x
p.day
p.day()
}
p$day
p$sec
?strptime
cube <- function(x, n) {x^3}
cub(3)
cube(3)
x <- 1:20
class(x)
x
object(x)
str(x)
typeoof(x)
typeof(x)
names(x)
attributes(x)
str(x)
x <- 1:10
if(x > 5) { x <- 0}
f <- function(x) {}
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
x <- 5
y <- if(x < 3) { NA } else { 10 }
y
h <- function(x, y = NULL, d = 3L) {
z <- cbind(x, d)
if(!is.null(y))
z <- z + y
else
z <- z + f
g <- x + y / z
if (d == 3L)
return(g)
g <- g + 10
g
}
h
read.csv("/specdata/001.csv")
read.csv("specdata/001.csv")
read.csv("assignment1/specdata/001.csv")
id = 1
directory = "assignment1/specdata"
filedata <- read.csv(paste(directory,"/",i".csv"))
paste(directory,"/",i".csv")
paste(directory,"/",i,".csv")
i = 1
id = 1:32
paste(directory,"/",i,".csv")
paste(directory,"/",i,".csv", sep="")
filedata <- read.csv(paste(directory,"/",i,".csv",sep=""))
filedata <- read.csv(paste(directory,"/",formatC(1, width=3, flag="0"),".csv",sep=""))
filedata[sulfate]
filedata[1]
filedata[2]
attributes(filedata)
filedata$sulfate
filedata[["sulfate"]]
?append
?mean
allobs <- 0
pullutant = 'sulfate'
filedata[[pollutant]]
pollutant = 'sulfate'
filedata[[pollutant]]
append(allobs, filedata[[pollutant]])
mean(allobs,na.rm = TRUE)
allobs
?append
append(allobs, filedata[[pollutant]])
allobs
append(1:5, 0:1)
allobs = append(allobs, filedata[[pollutant]])
mean(allobs,na.rm = TRUE)
